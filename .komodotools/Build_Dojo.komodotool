{
  "keyboard_shortcut": "", 
  "name": "Build Dojo", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "if (!org) var org = {};", 
    "if (!org.simpo) org.simpo = {};", 
    "", 
    "org.simpo.buildDojo = function(constObj){", 
    "\tvar construct = {", 
    "\t\t\"profile\": {},", 
    "\t\t", 
    "\t\tconstructor: function(constObj){", 
    "\t\t\tthis.logger = Components.classes[\"@mozilla.org/consoleservice;1\"].getService(Components.interfaces.nsIConsoleService);", 
    "\t\t},", 
    "\t\t", 
    "\t\tbuild: function(){", 
    "\t\t\tvar cFile = this._getCurrentFilePath();", 
    "\t\t\tif(this._isFileProfile(cFile)){", 
    "\t\t\t\tvar profile = this._loadProfile(cFile);", 
    "\t\t\t\tif(profile){", 
    "\t\t\t\t\tthis._runBuild(profile, cFile);", 
    "\t\t\t\t}", 
    "\t\t\t}", 
    "\t\t},", 
    "\t\t", 
    "\t\t_runBuild: function(profile, cFile){", 
    "\t\t\tvar cPath = this._getCurrentDirectoryPath();", 
    "\t\t\tko.run.runEncodedCommand(", 
    "\t\t\t\twindow,", 
    "\t\t\t\t'\"cls && %(nodejs) dojo/dojo.js load=build --profile '+cFile + ' && del '+profile.releaseDir+'\\\\*.uncompressed.js /S /Q && del '+profile.releaseDir+'\\\\*.consoleStripped.js /S /Q\"',", 
    "\t\t\t\tfunction(){", 
    "\t\t\t\t\tko.open.URI('file:///'+cPath+'//'+profile.releaseDir+'\\\\'+profile.releaseName+'\\\\build-report.txt');", 
    "\t\t\t\t}", 
    "\t\t\t);", 
    "\t\t},", 
    "\t\t", 
    "\t\t_loadProfile: function(filePath){", 
    "\t\t\tvar profile = {};", 
    "\t\t\txtk.load(\"file:///\"+filePath,profile);", 
    "\t\t\tif(profile.hasOwnProperty(\"profile\")){", 
    "\t\t\t\treturn profile.profile;", 
    "\t\t\t}else{", 
    "\t\t\t\treturn false;", 
    "\t\t\t}", 
    "\t\t},", 
    "\t\t", 
    "\t\t_isFileProfile: function(filePath){", 
    "\t\t\treturn /\\.profile.js/.test(filePath);", 
    "\t\t},", 
    "\t\t", 
    "\t\t_getCurrentFilePath: function() {", 
    "\t\t\t//  summary:", 
    "\t\t\t//      Get the path of the currently open file.", 
    "\t\t\t//  returns: string", 
    "", 
    "\t\t\ttry {", 
    "\t\t\t\treturn this._getCurrentDocument(ko.views.manager.currentView).file.path;", 
    "\t\t\t} catch(e) {", 
    "\t\t\t\tthis.logger.logStringMessage(", 
    "\t\t\t\t\tthis.stringBundle(\"ErrorNoCurrentFile\")", 
    "\t\t\t\t);", 
    "\t\t\t\treturn false;", 
    "\t\t\t}", 
    "\t\t},", 
    "\t\t", 
    "\t\t_getCurrentDocument: function(root) {", 
    "\t\t\t// summary:", 
    "\t\t\t//      Get the document for the supplied object - compatibility method so", 
    "\t\t\t//      version 5 API and version 6 API can both be used.", 
    "\t\t\t// returns: object", 
    "        ", 
    "\t\t\tif ((root === null) || (root === undefined)) {", 
    "\t\t\t\treturn false;", 
    "\t\t\t}", 
    "        ", 
    "\t\t\ttry {", 
    "\t\t\t\tif (root.document) {", 
    "\t\t\t\t\treturn root.document;", 
    "\t\t\t\t} else {", 
    "\t\t\t\t\treturn root.koDoc;", 
    "\t\t\t\t}", 
    "\t\t\t} catch(e) {", 
    "\t\t\t\treturn false;", 
    "\t\t\t}", 
    "\t\t},", 
    "\t\t", 
    "\t\t_getCurrentDirectoryPath: function() {", 
    "\t\t\t//  summary:", 
    "\t\t\t//      Get the directory path of the currently open file.", 
    "\t\t\t//  returns: string", 
    "", 
    "\t\t\ttry {", 
    "\t\t\t\treturn this._getCurrentDocument(ko.views.manager.currentView).file.dirName;", 
    "\t\t\t} catch(e) {", 
    "\t\t\t\tthis.logger.logStringMessage(", 
    "\t\t\t\t\tthis.stringBundle(\"ErrorNoCurrentFile\")", 
    "\t\t\t\t);", 
    "\t\t\t\treturn false;", 
    "\t\t\t}", 
    "\t\t}", 
    "\t};", 
    "\t", 
    "\tconstruct.constructor(constObj);", 
    "    return construct;", 
    "};", 
    "", 
    "var test = org.simpo.buildDojo();", 
    "var cFile = test.build();"
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.7", 
  "async": 1, 
  "type": "macro"
}